{"ast":null,"code":"var _jsxFileName = \"/Users/goke/Downloads/post_assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// import useHelloWorld from './custom-hooks/useHelloWorld.js';\n\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [input, setInput] = useState('');\n  const {\n    value,\n    setValue\n  } = useHelloWorld();\n  const [editPostId, setEditPostId] = useState(null);\n  const handlePostEdit = postId => {\n    const postEdit = posts.find(post => post.id == postId);\n    setInput(postEdit.title);\n    setEditPostId(postId);\n  };\n  const handleSavePostEdit = () => {\n    if (editPostId !== null) {\n      const updatedPosts = posts.map(post => post.id === editPostId ? {\n        ...post,\n        title: input\n      } : post);\n      setPosts(updatedPosts);\n      setInput('');\n      setEditPostId(null);\n    }\n  };\n  const {\n    date,\n    getDay,\n    getMonth\n  } = useDate();\n  console.log('----->', value);\n\n  // when a component mounts\n  // when a component's state or props changes\n  // when a component unmounts\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/todos?limit=5');\n        const data = await response.json();\n        console.log(data);\n        setPosts(data);\n        return () => {\n          console.log('I am unmounting...');\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    })(); //iife\n  }, []);\n  const handleChange = ({\n    target\n  }) => {\n    setInput(target.value);\n  };\n  useEffect(() => {\n    console.log('Input changed');\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px dashed',\n        marginBottom: '5px'\n      },\n      children: post.id === editPostId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSavePostEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [post.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePostEdit(post.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)), value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3DNYfcGX91eScEtsukBEWRQv65Q=\", true);\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","input","setInput","value","setValue","useHelloWorld","editPostId","setEditPostId","handlePostEdit","postId","postEdit","find","post","id","title","handleSavePostEdit","updatedPosts","map","date","getDay","getMonth","useDate","console","log","response","fetch","data","json","error","handleChange","target","children","style","border","marginBottom","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/goke/Downloads/post_assignment/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n// import useHelloWorld from './custom-hooks/useHelloWorld.js';\n\nimport './style.css';\n\n\nexport default function App() {\n  const [posts, setPosts] = useState([]);\n  const [input, setInput] = useState('');\n  const { value, setValue } = useHelloWorld();\n  const [editPostId, setEditPostId] = useState(null);\n\n  const handlePostEdit  = (postId) => {\n    const postEdit = posts.find((post) => post.id == postId)\n    setInput(postEdit.title)\n    setEditPostId(postId)\n  }\n\n  const handleSavePostEdit = () => {\n    if (editPostId !== null) {\n      const updatedPosts = posts.map((post) =>\n        post.id === editPostId ? { ...post, title: input } : post\n      );\n      setPosts(updatedPosts);\n      setInput('');\n      setEditPostId(null);\n    }\n  };\n\n  const { date, getDay, getMonth } = useDate();\n\n  console.log('----->', value);\n\n  // when a component mounts\n  // when a component's state or props changes\n  // when a component unmounts\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/todos?limit=5'\n        );\n\n        const data = await response.json();\n\n        console.log(data);\n        setPosts(data);\n        return () => {\n          console.log('I am unmounting...');\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    })(); //iife\n  }, []);\n\n  const handleChange = ({ target }) => {\n    setInput(target.value);\n  };\n\n  useEffect(() => {\n    console.log('Input changed');\n  }, [input]);\n\n\n  return (\n    <div>\n     {posts.map((post) => (\n        <div style={{ border: '1px dashed', marginBottom: '5px' }} key={post.id}>\n          {post.id === editPostId ? (\n            <div>\n              <input type=\"text\" value={input} onChange={handleChange} />\n              <button onClick={handleSavePostEdit}>Save</button>\n            </div>\n          ) : (\n            <>\n              {post.title}\n              <button onClick={() => handlePostEdit(post.id)}>Edit</button>\n            </>\n          )}\n        </div>\n      ))}\n      {value}\n      {/* <br />\n      Date: {date.toString()}\n      <br />\n      Day: {getDay()}\n      <br />\n      Month: {getMonth()}\n      <br />\n      <input type=\"text\" onChange={handleChange} />\n      <button\n        onClick={() => {\n          setValue(input);\n        }}\n      >\n      Change The World\n      </button> */}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}