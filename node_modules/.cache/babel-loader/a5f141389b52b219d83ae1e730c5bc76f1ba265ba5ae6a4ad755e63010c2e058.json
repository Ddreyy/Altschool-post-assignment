{"ast":null,"code":"var _jsxFileName = \"/Users/goke/Downloads/post_assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport useHelloWorld from './custom-hooks/useHelloWorld.js';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useDate = () => {\n  const date = new Date();\n  const getDay = () => {\n    return date.getDay();\n  };\n  const getMonth = () => {\n    return date.getMonth();\n  };\n  const addDay = numberOfDays => {\n    //N.B if day after adding is greater than number of days for that month, date returned should be a new month date\n\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + numberOfDays);\n    if (newDate.getMonth() !== date.getMonth()) {\n      newDate.setMonth(date.getMonth() + 1);\n    }\n    date = newDate;\n  };\n  const addMonth = numberOfMonths => {\n    //N.B if month after adding is greater than 11, date returned should be a new year\n\n    const newDate = new Date(date);\n    newDate.setMonth(newDate.getMonth() + numberOfMonths);\n    if (newDate.getMonth() < date.getMonth()) {\n      newDate.setFullYear(date.getFullYear() + 1);\n    }\n    date = newDate;\n  };\n  return {\n    date,\n    getDay,\n    getMonth,\n    addDay,\n    addMonth\n  };\n};\nexport default function App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [input, setInput] = useState('');\n  const {\n    value,\n    setValue\n  } = useHelloWorld();\n  const [editPostId, setEditPostId] = useState(null);\n  const handlePostEdit = postId => {\n    const postEdit = posts.find(post => post.id == postId);\n    setInput(postEdit.title);\n    setEditPostId(postId);\n  };\n  const handleSavePostEdit = () => {\n    if (editPostId !== null) {\n      const updatedPosts = posts.map(post => post.id === editPostId ? {\n        ...post,\n        title: input\n      } : post);\n      setPosts(updatedPosts);\n      setInput('');\n      setEditPostId(null);\n    }\n  };\n  const {\n    date,\n    getDay,\n    getMonth\n  } = useDate();\n  console.log('----->', value);\n\n  // when a component mounts\n  // when a component's state or props changes\n  // when a component unmounts\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/todos?limit=5');\n        const data = await response.json();\n        console.log(data);\n        setPosts(data);\n        return () => {\n          console.log('I am unmounting...');\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    })(); //iife\n  }, []);\n  const handleChange = ({\n    target\n  }) => {\n    setInput(target.value);\n  };\n  useEffect(() => {\n    console.log('Input changed');\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px dashed',\n        marginBottom: '5px'\n      },\n      children: post.id === editPostId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSavePostEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [post.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePostEdit(post.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)), value, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), \"Date: \", date.toString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), \"Day: \", getDay(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), \"Month: \", getMonth(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setValue(input);\n      },\n      children: \"Change The World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3DNYfcGX91eScEtsukBEWRQv65Q=\", false, function () {\n  return [useHelloWorld, useDate];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useHelloWorld","jsxDEV","_jsxDEV","Fragment","_Fragment","useDate","date","Date","getDay","getMonth","addDay","numberOfDays","newDate","setDate","getDate","setMonth","addMonth","numberOfMonths","setFullYear","getFullYear","App","_s","posts","setPosts","input","setInput","value","setValue","editPostId","setEditPostId","handlePostEdit","postId","postEdit","find","post","id","title","handleSavePostEdit","updatedPosts","map","console","log","response","fetch","data","json","error","handleChange","target","children","style","border","marginBottom","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toString","_c","$RefreshReg$"],"sources":["/Users/goke/Downloads/post_assignment/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport useHelloWorld from './custom-hooks/useHelloWorld.js';\n\nimport './style.css';\n\nconst useDate = () => {\n  const date = new Date();\n\n  const getDay = () => {\n    return date.getDay();\n  };\n\n  const getMonth = () => {\n    return date.getMonth();\n  };\n\n  const addDay = (numberOfDays) => {\n    //N.B if day after adding is greater than number of days for that month, date returned should be a new month date\n\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + numberOfDays);\n\n    if (newDate.getMonth() !== date.getMonth()) {\n      newDate.setMonth(date.getMonth() + 1);\n    }\n\n    date = newDate;\n  };\n\n  const addMonth = (numberOfMonths) => {\n    //N.B if month after adding is greater than 11, date returned should be a new year\n\n    const newDate = new Date(date);\n    newDate.setMonth(newDate.getMonth() + numberOfMonths);\n\n    if (newDate.getMonth() < date.getMonth()) {\n      newDate.setFullYear(date.getFullYear() + 1);\n    }\n\n    date = newDate;\n  };\n\n  return { date, getDay, getMonth, addDay, addMonth};\n};\n\nexport default function App() {\n  const [posts, setPosts] = useState([]);\n  const [input, setInput] = useState('');\n  const { value, setValue } = useHelloWorld();\n  const [editPostId, setEditPostId] = useState(null);\n\n  const handlePostEdit  = (postId) => {\n    const postEdit = posts.find((post) => post.id == postId)\n    setInput(postEdit.title)\n    setEditPostId(postId)\n  }\n\n  const handleSavePostEdit = () => {\n    if (editPostId !== null) {\n      const updatedPosts = posts.map((post) =>\n        post.id === editPostId ? { ...post, title: input } : post\n      );\n      setPosts(updatedPosts);\n      setInput('');\n      setEditPostId(null);\n    }\n  };\n\n  const { date, getDay, getMonth } = useDate();\n\n  console.log('----->', value);\n\n  // when a component mounts\n  // when a component's state or props changes\n  // when a component unmounts\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/todos?limit=5'\n        );\n\n        const data = await response.json();\n\n        console.log(data);\n        setPosts(data);\n        return () => {\n          console.log('I am unmounting...');\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    })(); //iife\n  }, []);\n\n  const handleChange = ({ target }) => {\n    setInput(target.value);\n  };\n\n  useEffect(() => {\n    console.log('Input changed');\n  }, [input]);\n\n  return (\n    <div>\n     {posts.map((post) => (\n        <div style={{ border: '1px dashed', marginBottom: '5px' }} key={post.id}>\n          {post.id === editPostId ? (\n            <div>\n              <input type=\"text\" value={input} onChange={handleChange} />\n              <button onClick={handleSavePostEdit}>Save</button>\n            </div>\n          ) : (\n            <>\n              {post.title}\n              <button onClick={() => handlePostEdit(post.id)}>Edit</button>\n            </>\n          )}\n        </div>\n      ))}\n      {value}\n      <br />\n      Date: {date.toString()}\n      <br />\n      Day: {getDay()}\n      <br />\n      Month: {getMonth()}\n      <br />\n      <input type=\"text\" onChange={handleChange} />\n      <button\n        onClick={() => {\n          setValue(input);\n        }}\n      >\n      Change The World\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}