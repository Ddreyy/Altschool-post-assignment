{"ast":null,"code":"var _jsxFileName = \"/Users/goke/Downloads/post_assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [input, setInput] = useState('');\n  const [editPostId, setEditPostId] = useState(null);\n  const handlePostEdit = postId => {\n    const postEdit = posts.find(post => post.id == postId);\n    setInput(postEdit.title);\n    setEditPostId(postId);\n  };\n  const handleSavePostEdit = () => {\n    if (editPostId !== null) {\n      const updatedPosts = posts.map(post => post.id === editPostId ? {\n        ...post,\n        title: input\n      } : post);\n      setPosts(updatedPosts);\n      setInput('');\n      setEditPostId(null);\n    }\n  };\n  const handleDeletePost = postId => {\n    const updatedPosts = posts.filter(post => post.id !== postId);\n    setPosts(updatedPosts);\n  };\n\n  // when a component mounts\n  // when a component's state or props changes\n  // when a component unmounts\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/todos?limit=5');\n        const data = await response.json();\n        console.log(data);\n        setPosts(data);\n        return () => {\n          console.log('I am unmounting...');\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    })(); //iife\n  }, []);\n  const handleChange = ({\n    target\n  }) => {\n    setInput(target.value);\n  };\n  useEffect(() => {\n    console.log('Input changed');\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '50%',\n        margin: '0 auto',\n        marginBottom: '10px',\n        // Increased margin to create a gap between posts\n        border: '1px solid black',\n        backgroundColor: 'white',\n        color: 'black',\n        borderRadius: '10px' // Rounded corners for the posts\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px'\n        },\n        children: post.id === editPostId ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              border: 'none',\n              borderRadius: '5px',\n              // Rounded corners for the button\n              padding: '8px 16px',\n              // Padding for the button\n              backgroundColor: 'lightblue',\n              // Set button background color to light blue\n              color: 'white',\n              // Set button text color to white\n              cursor: 'pointer' // Add pointer cursor on hover\n            },\n\n            onClick: handleSavePostEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [post.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              border: 'none',\n              gap: \"2px\",\n              borderRadius: '5px',\n              // Rounded corners for the button\n              padding: '8px 16px',\n              // Padding for the button\n              backgroundColor: 'lightblue',\n              // Set button background color to light blue\n              color: 'white',\n              // Set button text color to white\n              cursor: 'pointer' // Add pointer cursor on hover\n            },\n\n            onClick: () => handlePostEdit(post.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              border: 'none',\n              borderRadius: '5px',\n              // Rounded corners for the button\n              padding: '8px 16px',\n              // Padding for the button\n              backgroundColor: 'lightblue',\n              // Set button background color to light blue\n              color: 'white',\n              // Set button text color to white\n              cursor: 'pointer' // Add pointer cursor on hover\n            },\n\n            onClick: () => handleDeletePost(post.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"De1MMwutESbdmwQ7x7so2+krlVs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","input","setInput","editPostId","setEditPostId","handlePostEdit","postId","postEdit","find","post","id","title","handleSavePostEdit","updatedPosts","map","handleDeletePost","filter","response","fetch","data","json","console","log","error","handleChange","target","value","children","index","style","width","margin","marginBottom","border","backgroundColor","color","borderRadius","padding","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","cursor","onClick","gap","_c","$RefreshReg$"],"sources":["/Users/goke/Downloads/post_assignment/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nimport './style.css';\n\nexport default function App() {\n  const [posts, setPosts] = useState([]);\n  const [input, setInput] = useState('');\n  const [editPostId, setEditPostId] = useState(null);\n\n  const handlePostEdit  = (postId) => {\n    const postEdit = posts.find((post) => post.id == postId)\n    setInput(postEdit.title)\n    setEditPostId(postId)\n  }\n\n  const handleSavePostEdit = () => {\n    if (editPostId !== null) {\n      const updatedPosts = posts.map((post) =>\n        post.id === editPostId ? { ...post, title: input } : post\n      );\n      setPosts(updatedPosts);\n      setInput('');\n      setEditPostId(null);\n    }\n  };\n\n  const handleDeletePost = (postId) => {\n    const updatedPosts = posts.filter((post) => post.id !== postId);\n    setPosts(updatedPosts);\n  };\n\n\n  // when a component mounts\n  // when a component's state or props changes\n  // when a component unmounts\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/todos?limit=5'\n        );\n\n        const data = await response.json();\n\n        console.log(data);\n        setPosts(data);\n        return () => {\n          console.log('I am unmounting...');\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    })(); //iife\n  }, []);\n\n  const handleChange = ({ target }) => {\n    setInput(target.value);\n  };\n\n  useEffect(() => {\n    console.log('Input changed');\n  }, [input]);\n\n\n  return (\n    <div>\n      {posts.map((post, index) => (\n        <div\n          style={{\n            width: '50%', \n            margin: '0 auto', \n            marginBottom: '10px', // Increased margin to create a gap between posts\n            border: '1px solid black', \n            backgroundColor: 'white', \n            color: 'black',\n            borderRadius: '10px' // Rounded corners for the posts\n          }}\n          key={post.id}\n        >\n          <div style={{ padding: '10px' }}> \n            {post.id === editPostId ? (\n              <div>\n                <input type=\"text\" value={input} onChange={handleChange} />\n                <button\n                  style={{\n                    border: 'none',\n                    borderRadius: '5px', // Rounded corners for the button\n                    padding: '8px 16px', // Padding for the button\n                    backgroundColor: 'lightblue', // Set button background color to light blue\n                    color: 'white', // Set button text color to white\n                    cursor: 'pointer' // Add pointer cursor on hover\n                  }}\n                  onClick={handleSavePostEdit}\n                >\n                  Save\n                </button>\n              </div>\n            ) : (\n              <>\n                {post.title}\n                <button \n                  style={{\n                    border: 'none',\n                    gap: \"2px\",\n                    borderRadius: '5px', // Rounded corners for the button\n                    padding: '8px 16px', // Padding for the button\n                    backgroundColor: 'lightblue', // Set button background color to light blue\n                    color: 'white', // Set button text color to white\n                    cursor: 'pointer' // Add pointer cursor on hover\n                  }}\n                  onClick={() => handlePostEdit(post.id)}\n                >\n                  Edit\n                </button>\n                <button \n                  style={{\n                    border: 'none',\n                    borderRadius: '5px', // Rounded corners for the button\n                    padding: '8px 16px', // Padding for the button\n                    backgroundColor: 'lightblue', // Set button background color to light blue\n                    color: 'white', // Set button text color to white\n                    cursor: 'pointer' // Add pointer cursor on hover\n                  }}\n                  onClick={() => handleDeletePost(post.id)}\n                >\n                  Delete\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      ))}\n\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}